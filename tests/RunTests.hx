using buddy.Should;

import semver.SemVer;
import semver.RangeSet;

@colorize
class RunTests extends buddy.SingleSuite {
  
  public function new() {
    describe("semver", {
      it("version1 should be greater than version2", function() {
        [
          ['0.0.0', '0.0.0-foo'],
          ['0.0.1', '0.0.0'],
          ['1.0.0', '0.9.9'],
          ['0.10.0', '0.9.0'],
          ['0.99.0', '0.10.0'],
          ['2.0.0', '1.2.3'],
          ['0.0.0', '0.0.0-foo'],
          ['0.0.1', '0.0.0'],
          ['1.0.0', '0.9.9'],
          ['0.10.0', '0.9.0'],
          ['0.99.0', '0.10.0'],
          ['2.0.0', '1.2.3'],
          ['0.0.0', '0.0.0-foo'],
          ['0.0.1', '0.0.0'],
          ['1.0.0', '0.9.9'],
          ['0.10.0', '0.9.0'],
          ['0.99.0', '0.10.0'],
          ['2.0.0', '1.2.3'],
          ['1.2.3', '1.2.3-asdf'],
          ['1.2.3', '1.2.3-4'],
          ['1.2.3', '1.2.3-4-foo'],
          //['1.2.3-foo', '1.2.3-5'],
          ['1.2.3-5', '1.2.3-4'],
          ['1.2.3-foo', '1.2.3-Foo'],
          ['3.0.0', '2.7.2+asdf'],
          ['1.2.3-a.10', '1.2.3-a.5'],
          //['1.2.3-a.b', '1.2.3-a.5'],
          ['1.2.3-a.b', '1.2.3-a'],
          ['1.2.3-a.b.c.10.d.5', '1.2.3-a.b.c.5.d.100'],
          ['1.2.3-r2', '1.2.3-r100'],
          ['1.2.3-r100', '1.2.3-R2']
        ].map(function(input) {
          var a: SemVer = input[0];
          var b: SemVer = input[1];
          if (!(a > b))
            fail('$a should be greater than $b');
        });
      });

      it("version1 should be equivalent to version2", function() {
        [
          ['1.2.3', '1.2.3'],
          ['1.2.3', '1.2.3'],
          ['1.2.3-0', '1.2.3-0'],
          ['1.2.3-1', '1.2.3-1'],
          ['1.2.3-beta', '1.2.3-beta'],
          ['1.2.3-beta+build', '1.2.3-beta+otherbuild'],
          ['1.2.3+build', '1.2.3+otherbuild'],
          ['1.2.3-beta+build', '1.2.3-beta+otherbuild'],
        ].map(function(input) {
          var a: SemVer = input[0];
          var b: SemVer = input[1];
          if (!(a == b))
            fail('$a should be equal to $b');
        });
      });

      it("version should be included by range", function() {
        [
          ['1.0.0 - 2.0.0', '1.2.3'],
          ['^1.2.3+build', '1.2.3'],
          ['^1.2.3+build', '1.3.0'],
          ['1.2.3-pre+asdf - 2.4.3-pre+asdf', '1.2.3'],
          ['1.2.3-pre+asdf - 2.4.3-pre+asdf', '1.2.3-pre.2'],
          ['1.2.3-pre+asdf - 2.4.3-pre+asdf', '2.4.3-alpha'],
          ['1.2.3+asdf - 2.4.3+asdf', '1.2.3'],
          ['1.0.0', '1.0.0'],
          ['>=*', '0.2.4'],
          ['', '1.0.0'],
          ['*', '1.2.3'],
          ['*', '1.2.3'],
          ['>=1.0.0', '1.0.0'],
          ['>=1.0.0', '1.0.1'],
          ['>=1.0.0', '1.1.0'],
          ['>1.0.0', '1.0.1'],
          ['>1.0.0', '1.1.0'],
          ['<=2.0.0', '2.0.0'],
          ['<=2.0.0', '1.9999.9999'],
          ['<=2.0.0', '0.2.9'],
          ['<2.0.0', '1.9999.9999'],
          ['<2.0.0', '0.2.9'],
          ['>= 1.0.0', '1.0.0'],
          ['>=  1.0.0', '1.0.1'],
          ['>=   1.0.0', '1.1.0'],
          ['> 1.0.0', '1.0.1'],
          ['>  1.0.0', '1.1.0'],
          ['<=   2.0.0', '2.0.0'],
          ['<= 2.0.0', '1.9999.9999'],
          ['<=  2.0.0', '0.2.9'],
          ['<    2.0.0', '1.9999.9999'],
          ['<\t2.0.0', '0.2.9'],
          ['>=0.1.97', '0.1.97'],
          ['>=0.1.97', '0.1.97'],
          ['0.1.20 || 1.2.4', '1.2.4'],
          ['>=0.2.3 || <0.0.1', '0.0.0'],
          ['>=0.2.3 || <0.0.1', '0.2.3'],
          ['>=0.2.3 || <0.0.1', '0.2.4'],
          ['2.x.x', '2.1.3'],
          ['1.2.x', '1.2.3'],
          ['1.2.x || 2.x', '2.1.3'],
          ['1.2.x || 2.x', '1.2.3'],
          ['x', '1.2.3'],
          ['2.*.*', '2.1.3'],
          ['1.2.*', '1.2.3'],
          ['1.2.* || 2.*', '2.1.3'],
          ['1.2.* || 2.*', '1.2.3'],
          ['*', '1.2.3'],
          ['2', '2.1.2'],
          ['2.3', '2.3.1'],
          ['~2.4', '2.4.0'], // >=2.4.0 <2.5.0
          ['~2.4', '2.4.5'],
          ['~>3.2.1', '3.2.2'], // >=3.2.1 <3.3.0,
          ['~1', '1.2.3'], // >=1.0.0 <2.0.0
          ['~>1', '1.2.3'],
          ['~> 1', '1.2.3'],
          ['~1.0', '1.0.2'], // >=1.0.0 <1.1.0,
          ['~ 1.0', '1.0.2'],
          ['~ 1.0.3', '1.0.12'],
          ['>=1', '1.0.0'],
          ['>= 1', '1.0.0'],
          ['<1.2', '1.1.1'],
          ['< 1.2', '1.1.1'],
          ['~0.5.4-pre', '0.5.5'],
          ['~0.5.4-pre', '0.5.4'],
          ['=0.7.x', '0.7.2'],
          ['<=0.7.x', '0.7.2'],
          ['>=0.7.x', '0.7.2'],
          ['<=0.7.x', '0.6.2'],
          ['~1.2.1 >=1.2.3', '1.2.3'],
          ['~1.2.1 =1.2.3', '1.2.3'],
          ['~1.2.1 1.2.3', '1.2.3'],
          ['~1.2.1 >=1.2.3 1.2.3', '1.2.3'],
          ['~1.2.1 1.2.3 >=1.2.3', '1.2.3'],
          ['~1.2.1 1.2.3', '1.2.3'],
          ['>=1.2.1 1.2.3', '1.2.3'],
          ['1.2.3 >=1.2.1', '1.2.3'],
          ['>=1.2.3 >=1.2.1', '1.2.3'],
          ['>=1.2.1 >=1.2.3', '1.2.3'],
          ['>=1.2', '1.2.8'],
          ['^1.2.3', '1.8.1'],
          ['^0.1.2', '0.1.2'],
          ['^0.1', '0.1.2'],
          ['^1.2', '1.4.2'],
          ['^1.2 ^1', '1.4.2'],
          ['^1.2.3-alpha', '1.2.3-pre'],
          ['^1.2.0-alpha', '1.2.0-pre'],
          ['^0.0.1-alpha', '0.0.1-beta']
        ].map(function(input) {
          var a: RangeSet = input[0];
          var b: SemVer = input[1];
          if (!(a.satisfies(b)))
            fail('$a should include $b');
        });
      });

      it("version should not be included by range", function() {
        [
          ['1.0.0 - 2.0.0', '2.2.3'],
          ['1.2.3+asdf - 2.4.3+asdf', '1.2.3-pre.2'],
          //['1.2.3+asdf - 2.4.3+asdf', '2.4.3-alpha'],
          ['^1.2.3+build', '2.0.0'],
          ['^1.2.3+build', '1.2.0'],
          ['^1.2.3', '1.2.3-pre'],
          ['^1.2', '1.2.0-pre'],
          ['>1.2', '1.3.0-beta'],
          //['<=1.2.3', '1.2.3-beta'],
          ['^1.2.3', '1.2.3-beta'],
          ['=0.7.x', '0.7.0-asdf'],
          ['>=0.7.x', '0.7.0-asdf'],
          ['1.0.0', '1.0.1'],
          ['>=1.0.0', '0.0.0'],
          ['>=1.0.0', '0.0.1'],
          ['>=1.0.0', '0.1.0'],
          ['>1.0.0', '0.0.1'],
          ['>1.0.0', '0.1.0'],
          ['<=2.0.0', '3.0.0'],
          ['<=2.0.0', '2.9999.9999'],
          ['<=2.0.0', '2.2.9'],
          ['<2.0.0', '2.9999.9999'],
          ['<2.0.0', '2.2.9'],
          ['>=0.1.97', '0.1.93'],
          ['0.1.20 || 1.2.4', '1.2.3'],
          ['>=0.2.3 || <0.0.1', '0.0.3'],
          ['>=0.2.3 || <0.0.1', '0.2.2'],
          ['2.x.x', '1.1.3'],
          ['2.x.x', '3.1.3'],
          ['1.2.x', '1.3.3'],
          ['1.2.x || 2.x', '3.1.3'],
          ['1.2.x || 2.x', '1.1.3'],
          ['2.*.*', '1.1.3'],
          ['2.*.*', '3.1.3'],
          ['1.2.*', '1.3.3'],
          ['1.2.* || 2.*', '3.1.3'],
          ['1.2.* || 2.*', '1.1.3'],
          ['2', '1.1.2'],
          ['2.3', '2.4.1'],
          ['~2.4', '2.5.0'], // >=2.4.0 <2.5.0
          ['~2.4', '2.3.9'],
          ['~>3.2.1', '3.3.2'], // >=3.2.1 <3.3.0
          ['~>3.2.1', '3.2.0'], // >=3.2.1 <3.3.0
          ['~1', '0.2.3'], // >=1.0.0 <2.0.0
          ['~>1', '2.2.3'],
          ['~1.0', '1.1.0'], // >=1.0.0 <1.1.0
          ['<1', '1.0.0'],
          ['>=1.2', '1.1.1'],
          ['1', '2.0.0beta'],
          ['~0.5.4-beta', '0.5.4-alpha'],
          ['=0.7.x', '0.8.2'],
          ['>=0.7.x', '0.6.2'],
          ['<0.7.x', '0.7.2'],
          //['<1.2.3', '1.2.3-beta'],
          ['=1.2.3', '1.2.3-beta'],
          //['>1.2', '1.2.8'],
          ['^1.2.3', '2.0.0-alpha'],
          ['^1.2.3', '1.2.2'],
          ['^1.2', '1.1.9'],
          ['*', '1.2.3-foo']
        ].map(function(input) {
          var a: RangeSet = input[0];
          var b: SemVer = input[1];
          if (a.satisfies(b))
            fail('$a should not include $b');
        });
      });
    });
  }

}